
(defvar *tb-up-pin* 3)
(defvar *tb-down-pin* 15)
(defvar *tb-left-pin* 1)
(defvar *tb-right-pin* 2)
(defvar *tb-button-pin* 0)

(defvar *tb-up-state* nil)
(defvar *tb-up-old-state* nil)
(defvar *tb-down-state* nil)
(defvar *tb-down-old-state* nil)
(defvar *tb-left-state* nil)
(defvar *tb-left-old-state* nil)
(defvar *tb-right-state* nil)
(defvar *tb-right-old-state* nil)

(defvar dx 0)
(defvar dy 0)
(defvar tb-clicked nil)

(defun tb-init ()
  (pinmode *tb-up-pin* :input-pullup)
  (pinmode *tb-down-pin* :input-pullup)
  (pinmode *tb-left-pin* :input-pullup)
  (pinmode *tb-right-pin* :input-pullup)
  (pinmode *tb-button-pin* :input-pullup)
  (setq *tb-up-old-state* (digitalread *tb-up-pin*))
  (setq *tb-down-old-state* (digitalread *tb-down-pin*))
  (setq *tb-left-old-state* (digitalread *tb-left-pin*))
  (setq *tb-right-old-state* (digitalread *tb-right-pin*)))
  

(defun tb-read ()
  (setq dx 0)
  (setq dy 0)
  (setq *tb-up-state* (digitalread *tb-up-pin*))
  (setq *tb-down-state* (digitalread *tb-down-pin*))
  (setq *tb-left-state* (digitalread *tb-left-pin*))
  (setq *tb-right-state* (digitalread *tb-right-pin*))
  (if (not (equal *tb-up-state* *tb-up-old-state*))
      (setq dy -1)
      (if (not (equal *tb-down-state* *tb-down-old-state*))
          (setq dy 1)))
  (if (not (equal *tb-left-state* *tb-left-old-state*))
      (setq dx -1)
      (if (not (equal *tb-right-state* *tb-right-old-state*))
          (setq dx 1)))
  (setq tb-clicked (not (digitalread *tb-button-pin*)))
  (setq *tb-up-old-state* *tb-up-state*)
  (setq *tb-down-old-state* *tb-down-state*)
  (setq *tb-left-old-state* *tb-left-state*)
  (setq *tb-right-old-state* *tb-right-state*))
   

(defun tb-print ()
  (format t "up ~a down ~a left ~a right ~a~%"
          *tb-up-state* *tb-down-state* *tb-left-state* *tb-right-state*))
  
 
(defvar prev-print-millis 0)

(defun tb-debug ()
  (setq prev-print-millis (millis))
  (loop
   (if (not (digitalread *tb-button-pin*))
       (return))
   (tb-read)
   (if (<= prev-print-millis (- (millis) 100))
     (setq prev-print-millis (millis))
     (tb-print))
   (delay 5)))

(defvar x 160)
(defvar y 120)
(defvar old_x 160)
(defvar old_y 120)
(defvar last-display-millis 0)

(defun tb-test ()
  (tb-init)
  (fill-screen)
  (setq x 160)
  (setq y 120)
  (fill-circle x y 3)
  (setq last-display-millis (millis))
  (loop
   (tb-read)
   (if tb-clicked (return))
   (setq x (+ x dx))
   (if (< x 0) (setq x 0))
   (if (> x 320) (setq x 320))
   (setq y (+ y dy))
   (if (< y 0) (setq y 0))
   (if (> y 240) (setq y 240))
   (when (<= last-display-millis (- (millis) 20))
     (fill-circle old_x old_y 3 0)
     (fill-circle x y 3)
     (setq old_x x)
     (setq old_y y))))


(tb-init)
(tb-debug)
(tb-test)
   
(pprintall)
